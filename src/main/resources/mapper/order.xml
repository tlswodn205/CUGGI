<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.tencoding.CUGGI.repository.interfaces.OrderRepository">

	<insert id="insert">
		INSERT INTO order_tb(user_id, status, purchase_date)
		values(#{userId},"결제완료",now())
	</insert>

	<update id="updateById">
		UPDATE order_tb SET cancel_date = now(),
		status="결제 취소
		완료"
		WHERE id =
		#{id};
	</update>

	<update id="orderDetailUpdate">
		UPDATE order_tb SET state="취소요청"
		WHERE id = #{id};
	</update>

	<update id="orderUpdate">
		UPDATE order_tb SET state="결제완료"
		WHERE id =
		#{orderId};
	</update>

	<update id="orderAdminUpdate">
		UPDATE order_tb SET state="결제취소"
		WHERE id =
		#{orderId};
	</update>

	<delete id="deleteById">
		DELETE FROM order_tb WHERE id = #{id}
	</delete>

	<delete id="deleteBasket">
		DELETE FROM order_products_tb 
		WHERE id=#{id}

	</delete>

	<select id="findById"
		resultType="com.tencoding.CUGGI.repository.model.Order">
		SELECT * FROM order_tb WHERE id = #{id}
	</select>

	<select id="findByAll"
		resultType="com.tencoding.CUGGI.repository.model.Order">
		SELECT * FROM order_tb
	</select>

	<select id="findByBasketList"
		resultType="com.tencoding.CUGGI.dto.response.OrderBasketResponseDto">
		select op.id ,o.id, op.quantity, p.price as price,
		p.product_name, s.second_category_name, pi.image,pi.product_id as
		productId,o.id as orderId
		from order_products_tb op
		left join order_tb o
		on o.id = op.order_id
		left join product_tb p
		on p.id = op.product_id
		left join second_category_tb s
		on p.second_category_id = s.id
		left join
		product_image_tb pi
		on p.id = pi.product_id
		where o.user_id = #{id}
		and o.state = '장바구니';

	</select>

	<select id="findByList"
		resultType="com.tencoding.CUGGI.dto.response.OrderListResponseDto">
		select o.created_at , ot.product_name ,p.product_feature,
		ot.product_name,
		ot.price, pi.image, o.id, o.state
		from order_tb o
		left
		join
		order_products_tb ot
		on o.id = ot.order_id
		left join product_tb p
		on
		ot.product_id = p.id
		left join product_image_tb pi
		on p.id =
		pi.product_id
		where o.user_id =
		#{id}
		and o.state = '취소 요청'
		or o.state =
		'결제완료'
		or o.state =
		'결제취소'
		and pi.is_thumbnail = 1;
	</select>



	<select id="findByListAdmin"
		resultType="com.tencoding.CUGGI.dto.response.OrderListResponseDto">
		select o.id, o.created_at,
		o.user_id, op.product_name,
		op.price,o.cancel_date
		from order_tb o
		left join order_products_tb op
		on
		o.id = op.order_id;
	</select>

	<select id="findByDetailId"
		resultType="com.tencoding.CUGGI.repository.model.Order">
		select *
		from order_tb o
		left join order_products_tb op
		on
		o.id = op.order_id
		where o.id = #{id};
	</select>

	<select id="findPaging"
		resultType="com.tencoding.CUGGI.dto.response.PagingResponseDto">
		SELECT totalCount, totalPage, currentPage,
		CASE
		WHEN currentPage = 1
		THEN 1
		ELSE 0
		END AS isFirst,
		CASE
		WHEN currentPage = totalPage
		THEN 1
		ELSE
		0
		END AS isLast
		FROM(
		SELECT count(*) totalCount, ceil(count(*)/10)
		totalPage,#{page} currentPage,
		0 isFirst, 0 isLast
		FROM order_tb o
		<if test="type == 'id' and keyword != null">
			WHERE o.id = #{keyword}
		</if>
		<if test="type == 'name' and keyword != null">
			LEFT JOIN person_tb p ON p.user_id = o.user_id
			WHERE p.name
			like CONCAT('%',#{keyword},'%')
		</if>
		) order_total;

	</select>

	<select id="findByKeywordAndCurrentPage"
		resultType="com.tencoding.CUGGI.dto.response.OrderListResponseDto">
		SELECT o.*, p.name, t.product_name,price
		FROM order_tb o

		LEFT
		JOIN
		order_products_tb t
		ON t.order_id = o.id

		LEFT JOIN person_tb p
		ON
		p.user_id =
		o.user_id
		WHERE state != "장바구니"
		<if test="type == 'id' and keyword != null">
			WHERE o.id = #{keyword}
		</if>
		<if test="type == 'name' and keyword != null">
			AND p.name like CONCAT('%',#{keyword},'%')
		</if>
		<if test="status != ''">
			AND state like CONCAT('%',#{status},'%')
		</if>
		ORDER BY id DESC
		LIMIT #{startNum}, 10
	</select>

</mapper>